//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SampleFrameworkWcf
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexEchoInput", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ComplexEchoInput : object
    {
        
        private string WordField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Word
        {
            get
            {
                return this.WordField;
            }
            set
            {
                this.WordField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexEchoResponse", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial class ComplexEchoResponse : object
    {
        
        private string ResponseField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Response
        {
            get
            {
                return this.ResponseField;
            }
            set
            {
                this.ResponseField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SampleFrameworkWcf.ISampleWcf")]
    public interface ISampleWcf
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleWcf/EchoJson", ReplyAction="http://tempuri.org/ISampleWcf/EchoJsonResponse")]
        System.Threading.Tasks.Task<string> EchoJsonAsync(string word);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleWcf/EchoXml", ReplyAction="http://tempuri.org/ISampleWcf/EchoXmlResponse")]
        System.Threading.Tasks.Task<string> EchoXmlAsync(string word);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISampleWcf/Echo", ReplyAction="http://tempuri.org/ISampleWcf/EchoResponse")]
        System.Threading.Tasks.Task<SampleFrameworkWcf.ComplexEchoResponse> EchoAsync(SampleFrameworkWcf.ComplexEchoInput input);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public interface ISampleWcfChannel : SampleFrameworkWcf.ISampleWcf, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.1-preview-30422-0661")]
    public partial class SampleWcfClient : System.ServiceModel.ClientBase<SampleFrameworkWcf.ISampleWcf>, SampleFrameworkWcf.ISampleWcf
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public SampleWcfClient() : 
                base(SampleWcfClient.GetDefaultBinding(), SampleWcfClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_ISampleWcf.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleWcfClient(EndpointConfiguration endpointConfiguration) : 
                base(SampleWcfClient.GetBindingForEndpoint(endpointConfiguration), SampleWcfClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleWcfClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(SampleWcfClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleWcfClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(SampleWcfClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public SampleWcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> EchoJsonAsync(string word)
        {
            return base.Channel.EchoJsonAsync(word);
        }
        
        public System.Threading.Tasks.Task<string> EchoXmlAsync(string word)
        {
            return base.Channel.EchoXmlAsync(word);
        }
        
        public System.Threading.Tasks.Task<SampleFrameworkWcf.ComplexEchoResponse> EchoAsync(SampleFrameworkWcf.ComplexEchoInput input)
        {
            return base.Channel.EchoAsync(input);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISampleWcf))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_ISampleWcf))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:63996/SampleWcf.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return SampleWcfClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_ISampleWcf);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return SampleWcfClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_ISampleWcf);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_ISampleWcf,
        }
    }
}
